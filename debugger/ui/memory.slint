import { TextEdit, ScrollView, LineEdit } from "std-widgets.slint";
import { SelectableText } from "utils.slint";
import { Backend } from "backend.slint";
import { Styling } from "styling.slint";


export component MemoryArea {

    in-out property <string> memory_lines;
    in-out property <string> memory_view;
    in-out property <string> memory_start <=> mem_start_input.text;
    in-out property <string> memory_span <=> mem_span_input.text;
    in-out property <bool> mem_span_valid: true;
    in-out property <bool> mem_start_valid: true;


    VerticalLayout {
        Text {
            text: "Memory";
        }
        ScrollView {

            // TODO: maybe change this
            min-height: 5rem;

            HorizontalLayout {

                alignment: start;
                spacing: 1rem;

                SelectableText {
                    multiline: true;
                    text: memory_lines;
                }

                SelectableText {
                    multiline: true;
                    text: memory_view;
                }
            }
        }

        HorizontalLayout {
            spacing: 0;
            alignment: start;

            Text {
                text: "Start:";
            }
            Rectangle {width: 1rem;}
            Text {
                text: "0x";
            }
            mem_start_input := TextInput {
                min-width: 4rem;
                horizontal-alignment: left;
                color: mem_start_valid ? Styling.valid_data_color : Styling.invalid_data_color;
                accepted => {
                    Backend.memory_start_changed();
                }
            }
            Rectangle {width: 10px;}
            Text {
                text: "Span:";
            }
            Rectangle {width: 1rem;}
            Text {
                text: "0x";
            }
            mem_span_input := TextInput {
                min-width: 4rem;
                color: mem_span_valid ? Styling.valid_data_color : Styling.invalid_data_color;
                accepted => {
                    Backend.memory_span_changed();
                }
            }
        }
    }

}
